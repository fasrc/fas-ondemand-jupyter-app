#!/usr/bin/env bash

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

#
# Start Jupyter Notebook Server
#

<%- unless context.modules.blank? -%>
# Purge the module environment to avoid conflicts
module purge

# Load the require modules
module load <%= context.modules %>

# List loaded modules
module list
<%- end -%>

# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"
export container_image=/n/academic_homes/g_34166/u_332158_g_34166/images/cs109a_latest.sif

# Launch the Jupyter Notebook Server

# enable this only if needed for debug purpose. note that the password will appear in the output 
# set -x

export SING_GPU=""

<%- if !context.custom_num_gpus.to_i.zero? -%>
export SING_GPU="--nv"
<%- end -%>

## bind some extra stuff to be able to talk to slurm from within the container
export SING_BINDS=" -B /etc/nsswitch.conf -B /etc/sssd/ -B /var/lib/sss -B /etc/slurm -B /slurm -B /var/run/munge  -B `which sbatch ` -B `which srun ` -B `which sacct ` -B `which scontrol ` -B `which salloc `  -B /usr/lib64/slurm/ "

cat > $JOBROOT/jupyter.script.sh <<EOF1
#!/bin/bash
EOF1

chmod +x $JOBROOT/jupyter.script.sh

<%- unless context.envscript.blank? -%>

cat >> $JOBROOT/jupyter.script.sh <<EOF2

[ -f <%= context.envscript.to_s %> ] && source <%= context.envscript.to_s %>

EOF2

<%- end -%>


cat >> $JOBROOT/jupyter.script.sh <<EOF3
jupyter notebook \
           --ip='0.0.0.0' \
           --port=${MY_JUP_PORT} \
           --port-retries=0 \
           --NotebookApp.password="${MY_JUP_PASSWD}" \
           --NotebookApp.base_url="${MY_JUP_BASEURL}" \
           --no-browser \
           --NotebookApp.allow_origin='*' \
           --NotebookApp.disable_check_xsrf=True

EOF3

singularity exec $SING_GPU $SING_BINDS $container_image $JOBROOT/jupyter.script.sh
